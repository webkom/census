import express
import request

import ../redis
import ../config

router = express.Router()
r = redis.client()

ERRORS = {
    redis: 'Could not store in Redis.'
    payload: 'Payload does not contain the required information.'
}

router.get('/servers', (req, res) ->
    r.hgetall('servers', (err, redisRes) ->
        if err
            res.json({error: err})

        servers = []
        redisRes = redisRes or {}

        for serverId in Object.keys(redisRes)
            server = JSON.parse(redisRes[serverId])
            server.isOk = server.timestamp > Date.now() - config.TIMEOUT
            servers.push(server)

        res.json({ servers: servers })
    )
)

router.post('/report', (req, res) ->
    if req.param('hostname') and req.param('username')
        server = {
            hostname: req.param('hostname')
            username: req.param('username')
            ip: req.ip
            timestamp: Date.now()
        }
        r.hset('servers', server.hostname, JSON.stringify(server), (err, redisRes) ->
            if err
                res.json(500, { error: ERRORS.redis })

            res.json({ server: server })
        )
    else
        res.json(400, { error: ERRORS.payload })
)

export router
